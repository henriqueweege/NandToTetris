// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/07/MemoryAccess/BasicTest/BasicTest.vm

// Executes pop and push commands using the virtual memory segments.
push constant 10
pop local 0
push constant 21
push constant 22
pop argument 2
pop argument 1
push constant 36
pop this 6
push constant 42
push constant 45
pop that 5
pop that 2
push constant 510
pop temp 6
push local 0
push that 5
add
push argument 1
sub
push this 6
push this 6
add
sub
push temp 6
add


//or
@SP
A=M
M = !M

//or
@SP
A=M
D=M
@SP
M = M - 1
@SP
A=M
M= D|M
@SP
M = M + 1

//and
@SP
A=M
D=M
@SP
M = M - 1
@SP
A=M
M= D & M
@SP
M = M + 1



//greater
@SP
A=M
D=M
@SP
M = M - 1
@SP
A=M
D= D - M
M=-1
@LESSTHAN
D;JGT
@SP
M = M + 1
(LESSTHAN)
@SP
A=M
M=1

//less
@SP
A=M
D=M
@SP
M = M - 1
@SP
A=M
D= D - M
M=-1
@LESSTHAN
D;JLT
@SP
M = M + 1
(LESSTHAN)
@SP
A=M
M=1

//eq
@SP
A=M
D=M
@SP
M = M - 1
@SP
A=M
D= D - M
M=-1
@EQUAL
D;JEQ
@SP
M = M + 1
(EQUAL)
@SP
A=M
M=1



//----add----
//pop ultimo elemento da stack (recupera e SP--)
//acessa SP e adiciona o elemento que foi popado
@SP
A=M
D=M
@SP
M = M -1
@SP
A=M
D= M + D

//----sub----
//pop ultimo elemento da stack (recupera e SP--)
//acessa SP e subtrai o elemento que foi popado
@SP
A=M
D=M
@SP
M = M -1
@SP
A=M
D= M - D

//----push local 10----
@LCL
A = M + 10
D = M
@SP
A = M
M = D
@SP
M = M +1

//----pop local 10----
@SP
A=M
M=D
D=M
@LCL
A=M+10
M=D
@SP
M=M-1

