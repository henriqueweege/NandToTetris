// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl
/**
 * A 16-bit counter with reset, load, and inc control bits.
 * if      (reset(t) == 1) out(t+1) = 0
 * else if (load(t) == 1)  out(t+1) = in(t)
 * else if (inc(t) == 1)   out(t+1) = out(t) + 1
 * else                    out(t+1) = out(t)
 */

CHIP PC {
    IN in[16], load, inc, reset;
    OUT out[16];

    PARTS:

/*
    Register(in=incOut, load=true, out=out, out=reg);

    Mux16(a=reg, b[0..15]=false, sel=reset, out= resetOut);
    
    Mux16(a=in, b=resetOut, sel=load, out=loadOut);
    
    Inc16(in=loadOut, out= incremented);
    Mux16(a=loadOut, b= incremented, sel=inc, out=incOut);


para o henrique do futuro => pq essa implementação acima está errada? 
30/11/2023

-----------------------------------------------------------------------------------------
*/
    Register(in=resetOut, load=true, out=out, out=reg);

    Inc16(in=reg, out= incremented);
    Mux16(a=reg, b= incremented, sel=inc, out=incOut); //incremet 
    Mux16(a=incOut, b=in, sel=load, out=loadOut); //load
    Mux16(a=loadOut, b[0..15]=false, sel=reset, out= resetOut); //reset

    
}