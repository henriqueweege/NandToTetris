// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=dMuxA, b=dMuxB, c=dMuxC, d=dMuxD, e=dMuxE, f=dMuxF, g=dMuxG, h=dMuxH);

    RAM8(in=in, load=dMuxA, address=address[3..5], out=mem1);
    RAM8(in=in, load=dMuxB, address=address[3..5], out=mem2);
    RAM8(in=in, load=dMuxC, address=address[3..5], out=mem3);
    RAM8(in=in, load=dMuxD, address=address[3..5], out=mem4);
    RAM8(in=in, load=dMuxE, address=address[3..5], out=mem5);
    RAM8(in=in, load=dMuxF, address=address[3..5], out=mem6);
    RAM8(in=in, load=dMuxG, address=address[3..5], out=mem7);
    RAM8(in=in, load=dMuxH, address=address[3..5], out=mem8);

    Mux8Way16(a=mem1, b=mem2, c=mem3, d=mem4, e=mem5, f=mem6, g=mem7, h=mem8, sel=address[0..2], out=out);

}
